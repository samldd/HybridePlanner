;; Object Cachet-1.21-wmc/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "Cachet-1.21-wmc/"
  :tables (list 
   (semanticdb-table "sat_solver.cpp"
    :major-mode 'c++-mode
    :tags '(("iostream" include (:system-flag t) nil [2059 2078]) ("fstream" include (:system-flag t) nil [2079 2097]) ("cstdlib" include (:system-flag t) nil [2098 2116]) ("cstdio" include (:system-flag t) nil [2117 2134]) ("set" include (:system-flag t) nil [2135 2149]) ("vector" include (:system-flag t) nil [2150 2167]) ("SAT.h" include nil nil [2168 2184]) ("MAX_LINE_LENGTH" variable (:constant-flag t :default-value (nil)) nil [2208 2240]) ("MAX_WORD_LENGTH" variable (:constant-flag t :default-value (nil)) nil [2241 2270]) ("read_cnf" function (:arguments (("mng" variable (:type ("SAT_Manager" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2362 2378]) ("filename" variable (:pointer 1 :type "char") (reparse-symbol arg-sub-list) [2379 2396])) :type "void") nil [2348 6870]) ("handle_result" function (:arguments (("mng" variable (:type ("SAT_Manager" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6892 6908]) ("outcome" variable (:type "int") (reparse-symbol arg-sub-list) [6909 6921]) ("filename" variable (:pointer 1 :type "char") (reparse-symbol arg-sub-list) [6922 6938]) ("quiet" variable (:type ("bool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6939 6950])) :type "void") nil [6873 9535]) ("output_status" function (:arguments (("mng" variable (:type ("SAT_Manager" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9555 9571])) :type "void") nil [9536 10090]) ("verify_solution" function (:arguments (("mng" variable (:type ("SAT_Manager" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10113 10129])) :type "void") nil [10092 10869]) ("main" function (:arguments (("argc" variable (:type "int") (reparse-symbol arg-sub-list) [10880 10889]) ("argv" variable (:pointer 2 :type "char") (reparse-symbol arg-sub-list) [10890 10903])) :type "int") nil [10871 14503]))
    :file "sat_solver.cpp"
    :pointmax 14504
    )
   (semanticdb-table "zchaff_solver.cpp"
    :major-mode 'c++-mode
    :tags '(("algorithm" include (:system-flag t) nil [1981 2001]) ("fstream" include (:system-flag t) nil [2002 2020]) ("zchaff_solver.h" include nil nil [2021 2047]) ("stdio.h" include nil nil [2048 2066]) ("verify_out" function (:prototype-flag t :type ("ofstream" type (:type "class") nil nil)) nil [2271 2308]) ("solution_file" function (:prototype-flag t :type ("ofstream" type (:type "class") nil nil)) nil [2333 2373]) ("re_init_stats" function (:parent "CSolver" :arguments (("" variable (:type "void") (reparse-symbol arg-sub-list) [2410 2415])) :type "void") nil [2382 3829]) ("init_stats" function (:parent "CSolver" :arguments (("" variable (:type "void") (reparse-symbol arg-sub-list) [3856 3861])) :type "void") nil [3831 4028]) ("init_parameters" function (:parent "CSolver" :arguments (("" variable (:type "void") (reparse-symbol arg-sub-list) [4060 4065])) :type "void") nil [4030 5286]) ("CSolver" function (:constructor-flag t :parent "CSolver" :arguments (("" variable (:type "void") (reparse-symbol arg-sub-list) [5305 5310])) :type ("CSolver" type "class")) nil [5288 7209]) ("CSolver" function (:destructor-flag t :parent "CSolver" :type "void") nil [7211 7346]) ("set_time_limit" function (:parent "CSolver" :arguments (("t" variable (:type "float") (reparse-symbol arg-sub-list) [7377 7385])) :type "void") nil [7348 7420]) ("set_BN_node" function (:parent "CSolver" :arguments (("BN_nodes" variable (:type "int") (reparse-symbol arg-sub-list) [7448 7461])) :type "void") nil [7422 7496]) ("set_var_weight" function (:parent "CSolver" :arguments (("weight" variable (:pointer 1 :type ("vector" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7527 7551])) :type "void") nil [7498 8121]) ("set_cache_size" function (:parent "CSolver" :arguments (("size" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [8152 8166])) :type "void") nil [8123 8190]) ("set_max_entry" function (:parent "CSolver" :arguments (("entry" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [8220 8235])) :type "void") nil [8192 8259]) ("set_oldest_entry" function (:parent "CSolver" :arguments (("oldest" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [8292 8308])) :type "void") nil [8261 8430]) ("set_clean_limit" function (:parent "CSolver" :arguments (("limit" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [8462 8477])) :type "void") nil [8432 8503]) ("set_max_distance" function (:parent "CSolver" :arguments (("dist" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [8536 8550])) :type "void") nil [8505 8576]) ("set_dynamic_heuristic" function (:parent "CSolver" :arguments (("dynamic" variable (:type "int") (reparse-symbol arg-sub-list) [8614 8626])) :type "void") nil [8578 9052]) ("set_max_num_learned_clause" function (:parent "CSolver" :arguments (("max_num" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [9172 9189])) :type "void") nil [9131 9228]) ("set_backtrack_factor" function (:parent "CSolver" :arguments (("bfactor" variable (:type "double") (reparse-symbol arg-sub-list) [9265 9280])) :type "void") nil [9230 9313]) ("set_vgo" function (:parent "CSolver" :arguments (("variable_group_ordering" variable (:type ("vector" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9338 9381])) :type "void") nil [9316 9417]) ("set_static_heuristic" function (:parent "CSolver" :arguments (("stat" variable (:type ("bool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9455 9465])) :type "void") nil [9420 9495]) ("set_far_back_track_flag" function (:parent "CSolver" :arguments (("far" variable (:type ("bool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9536 9545])) :type "void") nil [9498 9580]) ("assign_static_score" function (:parent "CSolver" :type "void") nil [9583 9987]) ("set_cross_flag" function (:parent "CSolver" :arguments (("cross" variable (:type ("bool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10019 10030])) :type "void") nil [9990 10058]) ("set_adjust_flag" function (:parent "CSolver" :arguments (("adjust" variable (:type ("bool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10090 10102])) :type "void") nil [10060 10132]) ("set_quiet_flag" function (:parent "CSolver" :arguments (("q" variable (:type ("bool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10163 10170])) :type "void") nil [10134 10211]) ("elapsed_cpu_time" function (:parent "CSolver" :arguments (("" variable (:type "void") (reparse-symbol arg-sub-list) [10247 10252])) :type "double") nil [10214 10308]) ("cpu_run_time" function (:parent "CSolver" :type "double") nil [10310 10447]) ("set_variable_number" function (:parent "CSolver" :arguments (("n" variable (:type "int") (reparse-symbol arg-sub-list) [10483 10489])) :type "void") nil [10449 11730]) ("add_variable" function (:parent "CSolver" :arguments (("" variable (:type "void") (reparse-symbol arg-sub-list) [11758 11763])) :type "int") nil [11732 12967]) ("set_mem_limit" function (:parent "CSolver" :arguments (("s" variable (:type "int") (reparse-symbol arg-sub-list) [12997 13003])) :type "void") nil [12969 13042]) ("set_decision_strategy" function (:parent "CSolver" :arguments (("s" variable (:type "int") (reparse-symbol arg-sub-list) [13080 13086])) :type "void") nil [13044 13127]) ("enable_cls_deletion" function (:parent "CSolver" :arguments (("allow" variable (:type ("bool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13163 13174])) :type "void") nil [13129 13221]) ("set_cls_del_interval" function (:parent "CSolver" :arguments (("n" variable (:type "int") (reparse-symbol arg-sub-list) [13258 13264])) :type "void") nil [13223 13308]) ("set_randomness" function (:parent "CSolver" :arguments (("n" variable (:type "int") (reparse-symbol arg-sub-list) [13689 13695])) :type "void") nil [13660 13743]) ("set_random_seed" function (:parent "CSolver" :arguments (("seed" variable (:type "int") (reparse-symbol arg-sub-list) [13775 13784])) :type "void") nil [13745 13806]) ("add_hook" function (:parent "CSolver" :arguments (("fun" variable (:type ("HookFunPtrT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13832 13848]) ("interval" variable (:type "int") (reparse-symbol arg-sub-list) [13849 13862])) :type "void") nil [13808 13977]) ("run_periodic_functions" function (:parent "CSolver" :arguments (("" variable (:type "void") (reparse-symbol arg-sub-list) [14016 14021])) :type "void") nil [13979 16141]) ("init_solve" function (:parent "CSolver" :arguments (("" variable (:type "void") (reparse-symbol arg-sub-list) [16169 16174])) :type "void") nil [16144 16937]) ("set_var_value" function (:parent "CSolver" :arguments (("v" variable (:type "int") (reparse-symbol arg-sub-list) [16967 16973]) ("value" variable (:type "int") (reparse-symbol arg-sub-list) [16974 16984]) ("ante" variable (:type ("ClauseIdx" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16985 17000]) ("dl" variable (:type "int") (reparse-symbol arg-sub-list) [17001 17008])) :type "void") nil [16939 20147]) ("set_var_value_current_dl" function (:parent "CSolver" :arguments (("v" variable (:type "int") (reparse-symbol arg-sub-list) [20188 20194]) ("value" variable (:type "int") (reparse-symbol arg-sub-list) [20195 20205])) :type "void") nil [20149 23712]) ("set_var_value_not_current_dl" function (:parent "CSolver" :arguments (("v" variable (:type "int") (reparse-symbol arg-sub-list) [23757 23763]) ("value" variable (:type "int") (reparse-symbol arg-sub-list) [23764 23774])) :type "void") nil [23714 26843]) ("unset_var_value" function (:parent "CSolver" :arguments (("v" variable (:type "int") (reparse-symbol arg-sub-list) [26875 26881])) :type "void") nil [26845 28040]) ("find_max_clause_dlevel" function (:parent "CSolver" :arguments (("cl" variable (:type ("ClauseIdx" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28078 28091])) :type "int") nil [28042 28678]) ("dump_assignment_stack" function (:parent "CSolver" :arguments (("os" variable (:type ("ostream" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28716 28730])) :type "void") nil [28680 29294]) ("dump_implication_queue" function (:parent "CSolver" :arguments (("os" variable (:type ("ostream" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29333 29346])) :type "void") nil [29296 29399]) ("delete_clause_group" function (:parent "CSolver" :arguments (("gid" variable (:type "int") (reparse-symbol arg-sub-list) [29436 29444])) :type "void") nil [29401 30811]) ("reset" function (:parent "CSolver" :arguments (("" variable (:type "void") (reparse-symbol arg-sub-list) [30833 30838])) :type "void") nil [30813 31182]) ("delete_unrelevant_clauses" function (:parent "CSolver" :arguments (("" variable (:type "void") (reparse-symbol arg-sub-list) [34636 34641])) :type "void") nil [34596 40298]) ("time_out" function (:parent "CSolver" :arguments (("" variable (:type "void") (reparse-symbol arg-sub-list) [40514 40519])) :type ("bool" type (:type "class") nil nil)) nil [40491 40597]) ("adjust_variable_order" function (:parent "CSolver" :arguments (("lits" variable (:pointer 1 :type "int") (reparse-symbol arg-sub-list) [40634 40645]) ("n_lits" variable (:type "int") (reparse-symbol arg-sub-list) [40646 40657])) :type "void") nil [40598 42948]) ("decay_variable_score" function (:parent "CSolver" :arguments (("" variable (:type "void") (reparse-symbol arg-sub-list) [42984 42989])) :type "void") nil [42949 43571]) ("decide_next_branch" function (:parent "CSolver" :arguments (("" variable (:type "void") (reparse-symbol arg-sub-list) [43605 43610])) :type ("bool" type (:type "class") nil nil)) nil [43572 66526]) ("preprocess" function (:parent "CSolver" :arguments (("" variable (:type "void") (reparse-symbol arg-sub-list) [66552 66557])) :type "int") nil [66528 72651]) ("mark_var_unbranchable" function (:parent "CSolver" :arguments (("vid" variable (:type "int") (reparse-symbol arg-sub-list) [72689 72697])) :type "void") nil [72653 72853]) ("mark_var_branchable" function (:parent "CSolver" :arguments (("vid" variable (:type "int") (reparse-symbol arg-sub-list) [72889 72897])) :type "void") nil [72855 73155]) ("add_orig_clause" function (:parent "CSolver" :arguments (("lits" variable (:pointer 1 :type "int") (reparse-symbol arg-sub-list) [73193 73204]) ("n_lits" variable (:type "int") (reparse-symbol arg-sub-list) [73205 73216]) ("gid" variable (:type "int") (reparse-symbol arg-sub-list) [73217 73225])) :type ("ClauseIdx" type (:type "class") nil nil)) nil [73157 73427]) ("add_clause_with_gid" function (:parent "CSolver" :arguments (("lits" variable (:pointer 1 :type "int") (reparse-symbol arg-sub-list) [73469 73480]) ("n_lits" variable (:type "int") (reparse-symbol arg-sub-list) [73481 73492]) ("gid" variable (:type "int") (reparse-symbol arg-sub-list) [73493 73501]) ("original" variable (:type ("bool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73502 73516])) :type ("ClauseIdx" type (:type "class") nil nil)) nil [73429 73990]) ("add_conflict_clause" function (:parent "CSolver" :arguments (("lits" variable (:pointer 1 :type "int") (reparse-symbol arg-sub-list) [74031 74042]) ("n_lits" variable (:type "int") (reparse-symbol arg-sub-list) [74043 74054]) ("gflag" variable (:type "int") (reparse-symbol arg-sub-list) [74055 74065])) :type ("ClauseIdx" type (:type "class") nil nil)) nil [73991 77357]) ("real_solve" function (:parent "CSolver" :arguments (("" variable (:type "void") (reparse-symbol arg-sub-list) [77384 77389])) :type "void") nil [77359 78291]) ("solve" function (:parent "CSolver" :arguments (("" variable (:type "void") (reparse-symbol arg-sub-list) [78312 78317])) :type "int") nil [78293 84824]) ("result" variable (:type "int") nil [85893 85900]) ("dlevel" function (:pure-virtual-flag t :prototype-flag t :type "int") nil [94102 94115]) ("num_backtracks" variable (:type "int") nil [94129 94144]) ("DBG1" function (:prototype-flag t :arguments (("" variable (:type ("cout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [94543 94549]) ("" variable (:type ("blevel" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [94571 94579]) ("" variable (:type ("dlevel" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [94600 94608]) ("" variable (:type ("endl" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [94624 94629])) :type "int") nil [94538 94631]) ("DBG2" function (:prototype-flag t :arguments (("" variable (:type ("dump" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [94642 94648])) :type "int") nil [94636 94650]) ("assert" function (:prototype-flag t :arguments (("" variable (:type ("blevel" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [94695 94703]) ("" variable (:type ("dlevel" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [94705 94713])) :type "int") nil [94688 94715]) ("assert" function (:prototype-flag t :arguments (("" variable (:type ("_component_infor_stack" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [94725 94781]) ("" variable (:type ("left_branch_done" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [94783 94800])) :type "int") nil [94717 94801]) ("assert" function (:prototype-flag t :arguments (("" variable (:type ("_component_infor_stack" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [94833 94889]) ("" variable (:type ("changed" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [94891 94899])) :type "int") nil [94824 94900]) ("num_cached_children" variable (:default-value "0" :type "int") nil [95266 95290]) ("clear" function (:prototype-flag t :type "int") nil [95370 95378]) ("dlevel" function (:pure-virtual-flag t :prototype-flag t :type "int") nil [99323 99336]) ("num_backtracks" variable (:type "int") nil [99350 99365]) ("DBG2" function (:prototype-flag t :arguments (("" variable (:type ("dump" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [99376 99382])) :type "int") nil [99370 99384]) ("pop" function (:prototype-flag t :type "int") nil [102356 102362]) ("assert" function (:prototype-flag t :arguments (("" variable (:type ("_num_marked" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [104364 104377])) :type "int") nil [104356 104382]) ("DBG1" function (:prototype-flag t :arguments (("" variable (:type ("cout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [104394 104400]) ("" variable (:type ("endl" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [104432 104437]) ("" variable (:type ("cout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [104588 104594]) ("" variable (:type ("endl" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [104596 104602]) ("" variable (:type ("endl" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [104604 104609])) :type "int") nil [104387 104613]) ("assert" function (:prototype-flag t :arguments (("" variable (:type ("_resolvents" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [106072 106084]) ("" variable (:type ("empty" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [106084 106091]) ("" variable (:type ("var_idx" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [106095 106104])) :type "int") nil [106064 106110]) ("push_back" function (:prototype-flag t :arguments (("" variable (:type ("clause" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [106155 106165]) ("" variable (:type ("id" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [106166 106170])) :type "int") nil [106145 106172]) ("assert" function (:prototype-flag t :arguments (("" variable (:type ("_conflicts" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [107268 107279]) ("" variable (:type ("size" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [107279 107285])) :type "int") nil [107260 107291]) ("assert" function (:prototype-flag t :arguments (("" variable (:type ("_conflict_lits" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [107345 107360]) ("" variable (:type ("size" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [107360 107366])) :type "int") nil [107338 107373]) ("assert" function (:prototype-flag t :arguments (("" variable (:type ("_implication_queue" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [107387 107406]) ("" variable (:type ("empty" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [107406 107413])) :type "int") nil [107379 107415]) ("assert" function (:prototype-flag t :arguments (("" variable (:type ("_num_marked" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [107428 107441])) :type "int") nil [107420 107446]) ("DBG1" function (:prototype-flag t :arguments (("" variable (:type ("dump_assignment_stack" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [107456 107479])) :type "int") nil [107451 107481]) ("i" variable (:type "unsigned int") nil [112705 112720]) ("back_dl" variable (:default-value "0" :type "int") nil [112725 112741]) ("second_max" variable (:default-value "0" :type "int") nil [112743 112762]) ("unit_lit" variable (:default-value "-1" :type "int") nil [112822 112840]) ("added_cl" variable (:default-value "add_conflict_clause(&(*_conflict_lits.begin()), _conflict_lits.size(), gflag)" :type ("ClauseIdx" type (:type "class") nil nil)) nil [112897 112999]) ("_resolvents" variable (:dereference 1 :type "int") nil [113354 113369]) ("endl" variable (:type "int") nil [113388 113393]) ("clear" function (:prototype-flag t :type "int") nil [113410 113418]) ("adjust_variable_order" function (:prototype-flag t :arguments (("" variable (:type ("_conflict_lits" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [113507 113522]) ("" variable (:type ("size" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [113522 113528])) :type "int") nil [113456 113530]) ("DBG0" function (:prototype-flag t :arguments (("" variable (:type ("cout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [113560 113566]) ("" variable (:type ("added_cl" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [113586 113595]) ("" variable (:type ("clause" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [113604 113620]) ("" variable (:type ("endl" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [113624 113629])) :type "int") nil [113554 113632]) ("back_dl" variable (:default-value "dlevel()" :type "int") nil [114663 114682]) ("gid" variable (:type "int") nil [114794 114798]) ("zero_flag" variable (:default-value "true;" :type "int") nil [115063 115080]) ("back_dl" variable (:default-value "percolate_up(satprob, gid)" :type "int") nil [115147 115184]) ("back_dl" variable (:default-value "percolate_up(-1, gid)" :type "int") nil [115236 115268]) ("tried_both" function (:prototype-flag t :type "int") nil [116000 116013]) ("pop" function (:prototype-flag t :type "int") nil [117053 117059]) ("clear" function (:prototype-flag t :type "int") nil [121954 121962]) ("assert" function (:prototype-flag t :arguments (("" variable (:type ("is_conflicting" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [122146 122175])) :type "int") nil [122138 122177]) ("assert" function (:prototype-flag t :arguments (("" variable (:type ("_num_in_new_cl" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [122469 122485])) :type "int") nil [122461 122490]) ("DBG0" function (:prototype-flag t :arguments (("" variable (:type ("cout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [122500 122506]) ("" variable (:type ("back_dl" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [122552 122561]) ("" variable (:type ("cout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [122566 122572]) ("" variable (:type ("added_cl" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [122602 122611]) ("" variable (:type ("endl" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [122613 122618])) :type "int") nil [122495 122621]) ("back_dl" variable (:type "int") nil [122631 122639]) ("printf" function (:prototype-flag t :type "int") nil [122691 122741]) ("exit" function (:prototype-flag t :type "int") nil [122744 122754]) ("fatal" function (:prototype-flag t :arguments (("" variable (:type ("_POSITION_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [122755 122755])) :type "int") nil [122755 122755]) ("i" variable (:type "unsigned int") nil [122882 122897]) ("cl" variable (:default-value "_conflicts[0]" :type ("ClauseIdx" type (:type "class") nil nil)) nil [122902 122931]) ("gflag" function (:prototype-flag t :type "int") nil [122959 122967]) ("involved_lits" variable (:type ("vector" type (:type "class") nil nil)) nil [122972 122998]) ("assert" function (:prototype-flag t :arguments (("" variable (:type ("_num_marked" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [124077 124090])) :type "int") nil [124069 124095]) ("finish_add_conf_clause" function (:prototype-flag t :arguments (("" variable (:type ("gflag" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [124130 124136])) :type "int") nil [124107 124137]) ("real_conflict_lits" variable (:type ("vector" type (:type "class") nil nil)) nil [124241 124272]) ("cl" variable (:default-value "_conflicts[0]" :type ("ClauseIdx" type (:type "class") nil nil)) nil [124277 124306]) ("DBG0" function (:prototype-flag t :arguments (("" variable (:type ("cout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [124316 124322]) ("" variable (:type ("cl" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [124346 124350]) ("" variable (:type ("clause" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [124361 124371]) ("" variable (:type ("endl" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [124375 124380])) :type "int") nil [124311 124382]) ("mark_vars_at_current_dlevel" function (:prototype-flag t :arguments (("" variable (:type ("cl" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [124416 124419])) :type "int") nil [124387 124432]) ("gflag" function (:prototype-flag t :type "int") nil [124465 124473]) ("assignments" variable (:default-value "*_assignment_stack[dlevel()]" :type ("vector" type (:type "class") nil nil)) nil [124478 124536]) ("current" variable (:type ("vector" type (:type "class") nil nil)) nil [125384 125404]) ("assert" function (:prototype-flag t :arguments (("" variable (:type ("_num_marked" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [126591 126604])) :type "int") nil [126583 126609]) ("finish_add_conf_clause" function (:prototype-flag t :arguments (("" variable (:type ("gflag" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [126903 126909])) :type "int") nil [126880 126910]) ("cl" variable (:default-value "_conflicts[0]" :type ("ClauseIdx" type (:type "class") nil nil)) nil [127014 127043]) ("mark_vars_at_current_dlevel" function (:prototype-flag t :arguments (("" variable (:type ("cl" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [127077 127080])) :type "int") nil [127048 127093]) ("gflag" function (:prototype-flag t :type "int") nil [127126 127134]) ("assignments" variable (:default-value "*_assignment_stack[dlevel()]" :type ("vector" type (:type "class") nil nil)) nil [127139 127197]) ("finish_add_conf_clause" function (:prototype-flag t :arguments (("" variable (:type ("gflag" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [128199 128205])) :type "int") nil [128176 128206]) ("min_conf_id" variable (:default-value "_conflicts[0]" :type "int") nil [129763 129793]) ("min_conf_length" variable (:default-value "-1" :type "int") nil [129798 129821]) ("cl" variable (:type ("ClauseIdx" type (:type "class") nil nil)) nil [129826 129839]) ("gflag" variable (:type "unsigned int") nil [129844 129859]) ("_mark_increase_score" variable (:default-value "false;" :type "int") nil [129865 129892]) ("assert" function (:prototype-flag t :arguments (("" variable (:type ("_num_marked" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [132390 132402])) :type "int") nil [132383 132406]) ("cl" variable (:default-value "min_conf_id;" :type "int") nil [132411 132428]) ("DBG0" function (:prototype-flag t :arguments (("" variable (:type ("cout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [132468 132474]) ("" variable (:type ("cl" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [132498 132502]) ("" variable (:type ("clause" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [132513 132523]) ("" variable (:type ("endl" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [132527 132532])) :type "int") nil [132463 132534]) ("_mark_increase_score" variable (:default-value "true;" :type "int") nil [132539 132565]) ("mark_vars_at_current_dlevel" function (:prototype-flag t :arguments (("" variable (:type ("cl" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [132599 132602])) :type "int") nil [132570 132615]) ("gflag" function (:prototype-flag t :type "int") nil [132639 132647]) ("assignments" variable (:default-value "*_assignment_stack[dlevel()]" :type ("vector" type (:type "class") nil nil)) nil [132652 132710]) ("finish_add_conf_clause" function (:prototype-flag t :arguments (("" variable (:type ("gflag" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [133762 133768])) :type "int") nil [133739 133769]) ("assert" function (:prototype-flag t :type "int") nil [133829 133887]) ("endl" variable (:type "int") nil [134000 134005]) ("endl" variable (:type "int") nil [134063 134068]) ("endl" variable (:type "int") nil [135497 135502]) ("mem_dbase" variable (:default-value "CDatabase::mem_usage()" :type "int") nil [135558 135597]) ("mem_assignment" variable (:default-value "0" :type "int") nil [135602 135625]) ("size" function (:prototype-flag t :type "int") nil [135799 135806]) ("mem_assignment" variable (:type "int") nil [135830 135845]) ("assert" function (:prototype-flag t :arguments (("" variable (:type ("dlevel" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [137827 137835])) :type "int") nil [137819 137842]) ("assert" function (:prototype-flag t :arguments (("" variable (:type ("_stats" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [137855 137862]) ("" variable (:type ("is_solver_started" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [137862 137881]) ("" variable (:type ("false" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [137883 137889])) :type "int") nil [137847 137890]) ("mem_before" variable (:default-value "mem_usage()" :type "int") nil [137896 137925]) ("mem_after" variable (:default-value "mem_usage()" :type "int") nil [139232 139260]) ("endl" variable (:type "int") nil [139397 139402]) ("i" variable (:type "unsigned int") nil [139451 139469]) ("sz" variable (:type "unsigned int") nil [139451 139469]) ("DBG2" function (:prototype-flag t :arguments (("" variable (:type ("cout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139630 139636]) ("" variable (:type ("cout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139702 139708]) ("" variable (:type ("_ordered_vars" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139764 139780]) ("" variable (:type ("first" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139781 139787]) ("" variable (:type ("score" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139788 139795]) ("" variable (:type ("cout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139806 139812]) ("" variable (:type ("endl" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139814 139819])) :type "int") nil [139623 139823]) ("stable_sort" function (:prototype-flag t :arguments (("" variable (:type ("_ordered_vars" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139842 139856]) ("" variable (:type ("begin" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139856 139863]) ("" variable (:type ("_ordered_vars" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139865 139879]) ("" variable (:type ("end" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139879 139884]) ("" variable (:type ("cmp_var_stat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139886 139899])) :type "int") nil [139830 139900]) ("DBG2" function (:prototype-flag t :arguments (("" variable (:type ("cout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139912 139918]) ("" variable (:type ("cout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139982 139988]) ("" variable (:type ("_ordered_vars" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140044 140060]) ("" variable (:type ("first" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140061 140067]) ("" variable (:type ("score" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140068 140075]) ("" variable (:type ("cout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140086 140092]) ("" variable (:type ("endl" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140094 140099])) :type "int") nil [139905 140103]) ("set_var_score_pos" function (:prototype-flag t :arguments (("" variable (:type ("i" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140199 140201])) :type "int") nil [140181 140202]) ("_max_score_pos" variable (:default-value "0" :type "int") nil [140207 140226]) ("endl" variable (:type "int") nil [140323 140328]) ("assert" function (:prototype-flag t :arguments (("" variable (:type ("_conflict_lits" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140734 140749]) ("" variable (:type ("empty" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140749 140756])) :type "int") nil [140726 140758]) ("assert" function (:prototype-flag t :arguments (("" variable (:type ("conf_lits" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140771 140781]) ("" variable (:type ("empty" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140781 140788])) :type "int") nil [140763 140790]) ("cl" variable (:default-value "clause(conf_cl)" :type ("CClause" type (:type "class") nil nil)) nil [140795 140826]) ("insert" function (:prototype-flag t :arguments (("" variable (:type ("variable" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140923 140949])) :type "int") nil [140914 140951]) ("assert" function (:prototype-flag t :arguments (("" variable (:type ("conf_lits" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141052 141062]) ("" variable (:type ("empty" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141062 141069])) :type "int") nil [141043 141071]) ("vptr" variable (:pointer 1 :default-value "(* conf_lits.begin())" :type ("CVariable" type (:type "class") nil nil)) nil [141076 141117]) ("variable" function (:prototype-flag t :type "int") nil [141145 141157]) ("erase" function (:prototype-flag t :arguments (("" variable (:type ("conf_lits" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141178 141188]) ("" variable (:type ("begin" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141188 141195])) :type "int") nil [141172 141197]) ("antecedent" function (:prototype-flag t :type "int") nil [141221 141234]) ("assert" function (:prototype-flag t :arguments (("" variable (:type ("cl_idx" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141247 141255]) ("" variable (:type ("NULL_CLAUSE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141257 141269])) :type "int") nil [141239 141270]) ("cl" variable (:default-value "clause(cl_idx)" :type ("CClause" type (:type "class") nil nil)) nil [141275 141305]) ("gflag" function (:prototype-flag t :type "int") nil [141490 141498]) ("assert" function (:prototype-flag t :arguments (("" variable (:type ("conf_lits" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141595 141605]) ("" variable (:type ("empty" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141605 141612])) :type "int") nil [141586 141614]) ("true" variable (:type "int") nil [141653 141658]) ("begin" function (:prototype-flag t :type "int") nil [141725 141733]) ("v1" variable (:pointer 1 :default-value "*itr;" :type ("CVariable" type (:type "class") nil nil)) nil [141738 141760]) ("itr" variable (:type "int") nil [141767 141771]) ("v2" variable (:pointer 1 :default-value "*itr;" :type ("CVariable" type (:type "class") nil nil)) nil [141776 141798]) ("assert" function (:prototype-flag t :arguments (("" variable (:type ("v1" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141811 141814]) ("" variable (:type ("dlevel" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141815 141823]) ("" variable (:type ("v2" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141827 141830]) ("" variable (:type ("dlevel" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141831 141839])) :type "int") nil [141803 141841]) ("true" variable (:type "int") nil [141888 141893]) ("false" variable (:type "int") nil [141905 141911]) ("assert" function (:prototype-flag t :arguments (("" variable (:type ("dlevel" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141989 141997])) :type "int") nil [141981 142003]) ("cl" variable (:default-value "_conflicts[0]" :type ("ClauseIdx" type (:type "class") nil nil)) nil [142008 142037]) ("gflag" function (:prototype-flag t :type "int") nil [142070 142078]) ("conf_lits" variable (:type ("set" type (:type "class") nil nil)) nil [142083 142129]) ("set_up_resolve" function (:prototype-flag t :arguments (("" variable (:type ("cl" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [142149 142152]) ("" variable (:type ("conf_lits" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [142153 142163])) :type "int") nil [142134 142164]) ("resolve_one_lit" function (:prototype-flag t :arguments (("" variable (:type ("conf_lits" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [142229 142239])) :type "int") nil [142213 142240]) ("cls_lits" variable (:type ("vector" type (:type "class") nil nil)) nil [142245 142266]) ("added_cl" variable (:default-value "add_conflict_clause(&(*cls_lits.begin()), cls_lits.size(), gflag)" :type ("ClauseIdx" type (:type "class") nil nil)) nil [142500 142587]) ("adjust_variable_order" function (:prototype-flag t :arguments (("" variable (:type ("cls_lits" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [142780 142789]) ("" variable (:type ("size" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [142789 142795])) :type "int") nil [142735 142797]) ("back_dl" variable (:default-value "0" :type "int") nil [142802 142818]) ("unit_lit" variable (:default-value "cls_lits[0]" :type "int") nil [142823 142850]) ("DBG0" function (:prototype-flag t :arguments (("" variable (:type ("cout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [142944 142950]) ("" variable (:type ("added_cl" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [142970 142979]) ("" variable (:type ("clause" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [142988 143004]) ("" variable (:type ("endl" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143008 143013])) :type "int") nil [142938 143016]) ("back_track" function (:prototype-flag t :arguments (("" variable (:type ("back_dl" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143032 143041])) :type "int") nil [143021 143045]) ("queue_implication" function (:prototype-flag t :arguments (("" variable (:type ("unit_lit" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143068 143077]) ("" variable (:type ("added_cl" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143078 143087]) ("" variable (:type ("back_dl" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143088 143096])) :type "int") nil [143050 143097]) ("assert" function (:prototype-flag t :arguments (("" variable (:type ("is_conflicting" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143223 143252])) :type "int") nil [143215 143254]) ("clear" function (:prototype-flag t :type "int") nil [143270 143278]) ("DBG0" function (:prototype-flag t :arguments (("" variable (:type ("cout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143288 143294]) ("" variable (:type ("back_dl" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143340 143349]) ("" variable (:type ("cout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143355 143361]) ("" variable (:type ("added_cl" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143391 143400]) ("" variable (:type ("endl" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143402 143407])) :type "int") nil [143283 143410]) ("back_dl" variable (:type "int") nil [143422 143430]) ("gflag" variable (:type "unsigned int") nil [143623 143638]) ("gflag" variable (:default-value "0" :type "int") nil [143672 143682]) ("cl" variable (:default-value "add_clause(lits, num_lits, gflag)" :type "int") nil [143819 143862]) ("set_status" function (:prototype-flag t :arguments (("" variable (:type ("ORIGINAL_CL" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143916 143928])) :type "int") nil [143905 143929]) ("max_level" variable (:default-value "0" :type "int") nil [143934 143952]) ("unit_lit" variable (:default-value "0" :type "int") nil [143957 143974]) ("i" variable (:type "int") nil [143979 143989]) ("sz" variable (:type "int") nil [143979 143989]) ("cl" variable (:type "int") nil [145197 145200]) ("num_components" variable (:default-value "0" :type "int") nil [145581 145604]) ("size" function (:prototype-flag t :type "int") nil [145656 145663]) ("sum_score" variable (:default-value "0" :type "int") nil [145731 145749]) ("sum" variable (:default-value "0" :type "int") nil [145751 145763]) ("larger" variable (:type ("bool" type (:type "class") nil nil)) nil [145765 145777]) ("var" variable (:default-value "variable(0)" :type ("CVariable" type (:type "class") nil nil)) nil [145779 145809]) ("detection_seq" variable (:type "int") nil [145815 145829]) ("var_set" variable (:type "int") nil [145996 146004]) ("assert" function (:prototype-flag t :arguments (("" variable (:type ("var_set" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [146015 146023]) ("" variable (:type ("empty" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [146023 146030])) :type "int") nil [146006 146032]) ("size" function (:prototype-flag t :type "int") nil [146051 146058]) ("num_children" variable (:default-value "num_components;" :type "int") nil [173901 173931]) ("touched" variable (:dereference 1 :default-value "0" :type "int") nil [174041 174067]) ("num_components" variable (:type "int") nil [174181 174196]) ("endl" variable (:type "int") nil [174430 174435]) ("endl" variable (:type "int") nil [174559 174564]) ("endl" variable (:type "int") nil [174757 174762]) ("endl" variable (:type "int") nil [175107 175112]) ("endl" variable (:type "int") nil [175201 175206]) ("endl" variable (:type "int") nil [175661 175666]) ("endl" variable (:type "int") nil [175799 175804]) ("endl" variable (:type "int") nil [175843 175848]) ("endl" variable (:type "int") nil [175916 175921]) ("endl" variable (:type "int") nil [179337 179342]) ("mpz_out_str" function (:prototype-flag t :arguments (("" variable (:type ("stdout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [179552 179559]) ("" variable (:type ("_component_infor_stack" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [179564 179589]) ("" variable (:type ("sat_probability" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [179591 179607]) ("" variable (:type ("numerator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [179607 179617])) :type "int") nil [179540 179618]) ("mpz_out_str" function (:prototype-flag t :arguments (("" variable (:type ("stdout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [179736 179743]) ("" variable (:type ("_component_infor_stack" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [179748 179773]) ("" variable (:type ("left_sat_prob" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [179775 179789]) ("" variable (:type ("numerator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [179789 179799])) :type "int") nil [179724 179800]) ("mpz_out_str" function (:prototype-flag t :arguments (("" variable (:type ("stdout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [179922 179929]) ("" variable (:type ("_component_infor_stack" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [179934 179959]) ("" variable (:type ("right_sat_prob" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [179961 179976]) ("" variable (:type ("numerator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [179976 179986])) :type "int") nil [179910 179987]) ("endl" variable (:type "int") nil [180207 180212]) ("endl" variable (:type "int") nil [180280 180285]) ("assert" function (:prototype-flag t :arguments (("" variable (:type ("_component_infor_stack" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [184064 184091]) ("" variable (:type ("active" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [184093 184100])) :type "int") nil [184056 184101]) ("last_branch_comp" variable (:default-value "gid;" :type "int") nil [184103 184130]) ("branch_level" variable (:default-value "dlevel()" :type "int") nil [184132 184160]) ("backlevel" variable (:default-value "dlevel()" :type "int") nil [184162 184187]) ("hash_index" variable (:default-value "0" :type "unsigned int") nil [184251 184275]) ("left_branch_done" variable (:default-value "false;" :type ("bool" type (:type "class") nil nil)) nil [184277 184307]) ("right_branch_done" variable (:default-value "false;" :type ("bool" type (:type "class") nil nil)) nil [184309 184340]) ("left_branch_done" variable (:type "int") nil [184491 184508]) ("right_branch_done" variable (:default-value "(_component_infor_stack[last_branch_comp]->num_children == 1)" :type "int") nil [184510 184592]) ("num_children" variable (:type "int") nil [188026 188039]) ("comp_inf" variable (:default-value "* _component_infor_stack[last_branch_comp]" :type ("Component_information" type (:type "class") nil nil)) nil [199211 199289]) ("assert" function (:prototype-flag t :arguments (("" variable (:type ("sat_prob" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [199300 199309]) ("" variable (:type ("zero_flag" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [199309 199319])) :type "int") nil [199291 199320]) ("backlevel" variable (:type "int") nil [201043 201053]) ("assert" function (:prototype-flag t :arguments (("" variable (:type ("_component_infor_stack" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [201257 201284]) ("" variable (:type ("active" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [201286 201293])) :type "int") nil [201249 201294]) ("last_branch_comp" variable (:default-value "gid;" :type "int") nil [201432 201459]) ("branch_level" variable (:default-value "dlevel()" :type "int") nil [201461 201489]) ("backlevel" variable (:default-value "dlevel()" :type "int") nil [201491 201516]) ("hash_index" variable (:default-value "0" :type "unsigned int") nil [201537 201561]) ("left_branch_done" variable (:type "int") nil [201629 201646]) ("right_branch_done" variable (:default-value "(_component_infor_stack[last_branch_comp]->num_children == 1)" :type ("bool" type (:type "class") nil nil)) nil [201648 201735]) ("num_children" variable (:type "int") nil [204712 204725]) ("comp_inf" variable (:default-value "* _component_infor_stack[last_branch_comp]" :type ("Component_information" type (:type "class") nil nil)) nil [216119 216197]) ("assert" function (:prototype-flag t :arguments (("" variable (:type ("sat_prob" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [216207 216217])) :type "int") nil [216199 216224]) ("backlevel" variable (:type "int") nil [218417 218427]) ("endl" variable (:type "int") nil [218590 218595]) ("endl" variable (:type "int") nil [219004 219009]) ("endl" variable (:type "int") nil [219328 219333]) ("branched_child_stack" variable (:default-value "branched_child_list;" :type ("vector" type (:type "class") nil nil)) nil [219424 219481]) ("current" variable (:pointer 1 :type ("Component_information" type (:type "class") nil nil)) nil [219483 219515]) ("top_child" variable (:type "int") nil [219517 219531]) ("true" variable (:type "int") nil [220992 220997]))
    :file "zchaff_solver.cpp"
    :pointmax 221013
    )
   )
  :file "semantic.cache"
  :semantic-tag-version "2.0beta3"
  :semanticdb-version "2.0beta3"
  )
